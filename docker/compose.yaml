version: "3.9"

services:
  unchained_local:
    image: ghcr.io/kenshitech/unchained:latest
    container_name: unchained_local
    hostname: unchained_local
    volumes:
      - ./conf.local.yaml:/app/conf.yaml
    environment:
      - UNCHAINED_NODE_TYPE=full
    profiles: ["local"]
    restart: always
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16.1
    container_name: postgres
    hostname: postgres
    env_file:
      - .env
    volumes:
      - ./data:/var/lib/postgresql/data
    profiles: ["local"]
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  unchained_lite:
    image: ghcr.io/kenshitech/unchained:latest
    container_name: unchained_lite
    hostname: unchained_lite
    volumes:
      - ./conf.lite.yaml:/app/conf.yaml
    environment:
      - UNCHAINED_NODE_TYPE=lite
    profiles: ["lite"]
    restart: always

  unchained_remote:
    image: ghcr.io/kenshitech/unchained:latest
    container_name: unchained_remote
    hostname: unchained_remote
    volumes:
      - ./conf.remote.yaml:/app/conf.yaml
    environment:
      - UNCHAINED_NODE_TYPE=full
    profiles: ["remote"]
    restart: always

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    profiles: ["monitoring"]
    restart: always
    depends_on:
      prometheus:
        condition: service_started
      cadvisor:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    profiles: ["monitoring"]
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    profiles: ["monitoring"]
    restart: always
